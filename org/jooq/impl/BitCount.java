package org.jooq.impl;

import org.jooq.Configuration;
import org.jooq.Field;

class BitCount
  extends AbstractFunction<Integer>
{
  private static final long serialVersionUID = 7624782102883057433L;
  
  BitCount(Field<?> field)
  {
    super("bit_count", SQLDataType.INTEGER, new Field[] { field });
  }
  
  final Field<Integer> getFunction0(Configuration configuration)
  {
    Field<?> field = getArguments()[0];
    switch (configuration.family())
    {
    case MARIADB: 
    case MYSQL: 
      return DSL.function("bit_count", getDataType(), getArguments());
    case H2: 
    case HSQLDB: 
      if (field.getType() == Byte.class)
      {
        Field<Byte> f = field;
        
        return DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)1))).add(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)2))).div(DSL.inline(Byte.valueOf((byte)2)))).add(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)4))).div(DSL.inline(Byte.valueOf((byte)4)))).add(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)8))).div(DSL.inline(Byte.valueOf((byte)8)))).add(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)16))).div(DSL.inline(Byte.valueOf((byte)16)))).add(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)32))).div(DSL.inline(Byte.valueOf((byte)32)))).add(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)64))).div(DSL.inline(Byte.valueOf((byte)64)))).add(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)Byte.MIN_VALUE))).div(DSL.inline(Byte.valueOf((byte)Byte.MIN_VALUE)))).cast(Integer.class);
      }
      if (field.getType() == Short.class)
      {
        Field<Short> f = field;
        
        return DSL.bitAnd(f, DSL.inline(Short.valueOf((short)1))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)2))).div(DSL.inline(Short.valueOf((short)2)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)4))).div(DSL.inline(Short.valueOf((short)4)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)8))).div(DSL.inline(Short.valueOf((short)8)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)16))).div(DSL.inline(Short.valueOf((short)16)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)32))).div(DSL.inline(Short.valueOf((short)32)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)64))).div(DSL.inline(Short.valueOf((short)64)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)128))).div(DSL.inline(Short.valueOf((short)128)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)256))).div(DSL.inline(Short.valueOf((short)256)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)512))).div(DSL.inline(Short.valueOf((short)512)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)1024))).div(DSL.inline(Short.valueOf((short)1024)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)2048))).div(DSL.inline(Short.valueOf((short)2048)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)4096))).div(DSL.inline(Short.valueOf((short)4096)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)8192))).div(DSL.inline(Short.valueOf((short)8192)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)16384))).div(DSL.inline(Short.valueOf((short)16384)))).add(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)Short.MIN_VALUE))).div(DSL.inline(Short.valueOf((short)Short.MIN_VALUE)))).cast(Integer.class);
      }
      if (field.getType() == Integer.class)
      {
        Field<Integer> f = field;
        
        return DSL.bitAnd(f, DSL.inline(Integer.valueOf(1))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(2))).div(DSL.inline(Integer.valueOf(2)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(4))).div(DSL.inline(Integer.valueOf(4)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(8))).div(DSL.inline(Integer.valueOf(8)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(16))).div(DSL.inline(Integer.valueOf(16)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(32))).div(DSL.inline(Integer.valueOf(32)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(64))).div(DSL.inline(Integer.valueOf(64)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(128))).div(DSL.inline(Integer.valueOf(128)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(256))).div(DSL.inline(Integer.valueOf(256)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(512))).div(DSL.inline(Integer.valueOf(512)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(1024))).div(DSL.inline(Integer.valueOf(1024)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(2048))).div(DSL.inline(Integer.valueOf(2048)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(4096))).div(DSL.inline(Integer.valueOf(4096)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(8192))).div(DSL.inline(Integer.valueOf(8192)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(16384))).div(DSL.inline(Integer.valueOf(16384)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(32768))).div(DSL.inline(Integer.valueOf(32768)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(65536))).div(DSL.inline(Integer.valueOf(65536)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(131072))).div(DSL.inline(Integer.valueOf(131072)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(262144))).div(DSL.inline(Integer.valueOf(262144)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(524288))).div(DSL.inline(Integer.valueOf(524288)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(1048576))).div(DSL.inline(Integer.valueOf(1048576)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(2097152))).div(DSL.inline(Integer.valueOf(2097152)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(4194304))).div(DSL.inline(Integer.valueOf(4194304)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(8388608))).div(DSL.inline(Integer.valueOf(8388608)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(16777216))).div(DSL.inline(Integer.valueOf(16777216)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(33554432))).div(DSL.inline(Integer.valueOf(33554432)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(67108864))).div(DSL.inline(Integer.valueOf(67108864)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(134217728))).div(DSL.inline(Integer.valueOf(134217728)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(268435456))).div(DSL.inline(Integer.valueOf(268435456)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(536870912))).div(DSL.inline(Integer.valueOf(536870912)))).add(DSL.bitAnd(f, DSL.inline(Integer.valueOf(1073741824))).div(DSL.inline(Integer.valueOf(1073741824)))).add(
          DSL.bitAnd(f, DSL.inline(Integer.valueOf(Integer.MIN_VALUE))).div(DSL.inline(Integer.valueOf(Integer.MIN_VALUE))));
      }
      if (field.getType() == Long.class)
      {
        Field<Long> f = field;
        
        return DSL.bitAnd(f, DSL.inline(Long.valueOf(1L))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(2L))).div(DSL.inline(Long.valueOf(2L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(4L))).div(DSL.inline(Long.valueOf(4L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(8L))).div(DSL.inline(Long.valueOf(8L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(16L))).div(DSL.inline(Long.valueOf(16L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(32L))).div(DSL.inline(Long.valueOf(32L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(64L))).div(DSL.inline(Long.valueOf(64L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(128L))).div(DSL.inline(Long.valueOf(128L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(256L))).div(DSL.inline(Long.valueOf(256L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(512L))).div(DSL.inline(Long.valueOf(512L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(1024L))).div(DSL.inline(Long.valueOf(1024L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(2048L))).div(DSL.inline(Long.valueOf(2048L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(4096L))).div(DSL.inline(Long.valueOf(4096L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(8192L))).div(DSL.inline(Long.valueOf(8192L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(16384L))).div(DSL.inline(Long.valueOf(16384L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(32768L))).div(DSL.inline(Long.valueOf(32768L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(65536L))).div(DSL.inline(Long.valueOf(65536L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(131072L))).div(DSL.inline(Long.valueOf(131072L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(262144L))).div(DSL.inline(Long.valueOf(262144L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(524288L))).div(DSL.inline(Long.valueOf(524288L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(1048576L))).div(DSL.inline(Long.valueOf(1048576L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(2097152L))).div(DSL.inline(Long.valueOf(2097152L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(4194304L))).div(DSL.inline(Long.valueOf(4194304L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(8388608L))).div(DSL.inline(Long.valueOf(8388608L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(16777216L))).div(DSL.inline(Long.valueOf(16777216L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(33554432L))).div(DSL.inline(Long.valueOf(33554432L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(67108864L))).div(DSL.inline(Long.valueOf(67108864L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(134217728L))).div(DSL.inline(Long.valueOf(134217728L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(268435456L))).div(DSL.inline(Long.valueOf(268435456L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(536870912L))).div(DSL.inline(Long.valueOf(536870912L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(1073741824L))).div(DSL.inline(Long.valueOf(1073741824L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(2147483648L))).div(DSL.inline(Long.valueOf(2147483648L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(4294967296L))).div(DSL.inline(Long.valueOf(4294967296L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(8589934592L))).div(DSL.inline(Long.valueOf(8589934592L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(17179869184L))).div(DSL.inline(Long.valueOf(17179869184L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(34359738368L))).div(DSL.inline(Long.valueOf(34359738368L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(68719476736L))).div(DSL.inline(Long.valueOf(68719476736L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(137438953472L))).div(DSL.inline(Long.valueOf(137438953472L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(274877906944L))).div(DSL.inline(Long.valueOf(274877906944L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(549755813888L))).div(DSL.inline(Long.valueOf(549755813888L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(1099511627776L))).div(DSL.inline(Long.valueOf(1099511627776L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(2199023255552L))).div(DSL.inline(Long.valueOf(2199023255552L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(4398046511104L))).div(DSL.inline(Long.valueOf(4398046511104L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(8796093022208L))).div(DSL.inline(Long.valueOf(8796093022208L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(17592186044416L))).div(DSL.inline(Long.valueOf(17592186044416L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(35184372088832L))).div(DSL.inline(Long.valueOf(35184372088832L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(70368744177664L))).div(DSL.inline(Long.valueOf(70368744177664L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(140737488355328L))).div(DSL.inline(Long.valueOf(140737488355328L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(281474976710656L))).div(DSL.inline(Long.valueOf(281474976710656L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(562949953421312L))).div(DSL.inline(Long.valueOf(562949953421312L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(1125899906842624L))).div(DSL.inline(Long.valueOf(1125899906842624L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(2251799813685248L))).div(DSL.inline(Long.valueOf(2251799813685248L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(4503599627370496L))).div(DSL.inline(Long.valueOf(4503599627370496L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(9007199254740992L))).div(DSL.inline(Long.valueOf(9007199254740992L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(18014398509481984L))).div(DSL.inline(Long.valueOf(18014398509481984L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(36028797018963968L))).div(DSL.inline(Long.valueOf(36028797018963968L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(72057594037927936L))).div(DSL.inline(Long.valueOf(72057594037927936L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(144115188075855872L))).div(DSL.inline(Long.valueOf(144115188075855872L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(288230376151711744L))).div(DSL.inline(Long.valueOf(288230376151711744L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(576460752303423488L))).div(DSL.inline(Long.valueOf(576460752303423488L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(1152921504606846976L))).div(DSL.inline(Long.valueOf(1152921504606846976L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(2305843009213693952L))).div(DSL.inline(Long.valueOf(2305843009213693952L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(4611686018427387904L))).div(DSL.inline(Long.valueOf(4611686018427387904L)))).add(DSL.bitAnd(f, DSL.inline(Long.valueOf(Long.MIN_VALUE))).div(DSL.inline(Long.valueOf(0L)))).cast(Integer.class);
      }
      return DSL.function("bit_count", getDataType(), getArguments());
    }
    if (field.getType() == Byte.class)
    {
      Field<Byte> f = field;
      
      byte i = 0;
      
      i = (byte)(i + 1);
      i = (byte)(i + 1);
      i = (byte)(i + 1);
      i = (byte)(i + 1);
      i = (byte)(i + 1);
      i = (byte)(i + 1);
      i = (byte)(i + 1);return DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)1))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)2))), DSL.inline(Byte.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)4))), DSL.inline(Byte.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)8))), DSL.inline(Byte.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)16))), DSL.inline(Byte.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)32))), DSL.inline(Byte.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)64))), DSL.inline(Byte.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Byte.valueOf((byte)Byte.MIN_VALUE))), DSL.inline(Byte.valueOf(i)))).cast(Integer.class);
    }
    if (field.getType() == Short.class)
    {
      Field<Short> f = field;
      
      short i = 0;
      
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);
      i = (short)(i + 1);return DSL.bitAnd(f, DSL.inline(Short.valueOf((short)1))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)2))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)4))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)8))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)16))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)32))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)64))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)128))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)256))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)512))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)1024))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)2048))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)4096))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)8192))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)16384))), DSL.inline(Short.valueOf(i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Short.valueOf((short)Short.MIN_VALUE))), DSL.inline(Short.valueOf(i)))).cast(Integer.class);
    }
    if (field.getType() == Integer.class)
    {
      Field<Integer> f = field;
      
      int i = 0;
      
      return DSL.bitAnd(f, DSL.inline(Integer.valueOf(1))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(2))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(4))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(8))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(16))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(32))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(64))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(128))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(256))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(512))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(1024))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(2048))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(4096))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(8192))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(16384))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(32768))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(65536))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(131072))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(262144))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(524288))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(1048576))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(2097152))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(4194304))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(8388608))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(16777216))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(33554432))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(67108864))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(134217728))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(268435456))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(536870912))), DSL.inline(Integer.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(1073741824))), DSL.inline(Integer.valueOf(++i)))).add(
        DSL.shr(DSL.bitAnd(f, DSL.inline(Integer.valueOf(Integer.MIN_VALUE))), DSL.inline(Integer.valueOf(++i))));
    }
    if (field.getType() == Long.class)
    {
      Field<Long> f = field;
      
      long i = 0L;
      
      return DSL.bitAnd(f, DSL.inline(Long.valueOf(1L))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(2L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(4L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(8L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(16L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(32L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(64L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(128L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(256L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(512L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(1024L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(2048L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(4096L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(8192L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(16384L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(32768L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(65536L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(131072L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(262144L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(524288L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(1048576L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(2097152L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(4194304L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(8388608L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(16777216L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(33554432L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(67108864L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(134217728L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(268435456L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(536870912L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(1073741824L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(2147483648L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(4294967296L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(8589934592L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(17179869184L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(34359738368L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(68719476736L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(137438953472L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(274877906944L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(549755813888L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(1099511627776L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(2199023255552L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(4398046511104L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(8796093022208L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(17592186044416L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(35184372088832L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(70368744177664L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(140737488355328L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(281474976710656L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(562949953421312L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(1125899906842624L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(2251799813685248L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(4503599627370496L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(9007199254740992L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(18014398509481984L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(36028797018963968L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(72057594037927936L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(144115188075855872L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(288230376151711744L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(576460752303423488L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(1152921504606846976L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(2305843009213693952L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(4611686018427387904L))), DSL.inline(Long.valueOf(++i)))).add(DSL.shr(DSL.bitAnd(f, DSL.inline(Long.valueOf(Long.MIN_VALUE))), DSL.inline(Long.valueOf(++i)))).cast(Integer.class);
    }
    return DSL.function("bit_count", getDataType(), getArguments());
  }
}
